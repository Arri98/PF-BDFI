version: "3.3" 
services:
  mongo:
    build: ./Dockerfiles/Mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example

  zookeeper:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
  kafka:
    build: ./Dockerfiles/Kafka/kafka-docker
    ports:
      - "9092"
    environment:
      DOCKER_API_VERSION: 1.22
      KAFKA_ADVERTISED_HOST_NAME: 192.168.99.100
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  
  web:
    container_name: flask-python
    build: ./Dockerfiles/Flask
    ports:
      - "5000:5000"
    volumes:
      - ./:/usr/src/app/
     

    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /docker/kafka:/kafka
      
  spark-master:
    image: bde2020/spark-master:3.1.1-hadoop3.2
    container_name: spark-master
    ports:
      - "8080:8080"
      - "7077:7077"
    environment:
      - INIT_DAEMON_STEP=setup_spark
    networks:
      spark:
        ipv4_address: 10.0.0.2

  spark-worker-1:
    image: bde2020/spark-worker:3.1.1-hadoop3.2
    container_name: spark-worker-1
    depends_on:
      - spark-master
    ports:
      - "8081:8081"
    environment:
      - "SPARK_MASTER=spark://spark-master:7077"
    networks:
      spark:
        ipv4_address: 10.0.0.3      
      
  model:
    build: ./Dockerfiles/SparkScala
    networks:
      spark:
        ipv4_address: 10.0.0.4

networks:
  backend:
    driver: bridge
    ipam:
     config:
       - subnet: 10.0.0.0/16      
      
      

